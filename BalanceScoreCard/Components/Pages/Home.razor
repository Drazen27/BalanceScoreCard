@page "/"

@inject IVentasService VentasService
@code {
    

    List<Hecho> ventas = new List<Hecho>();
    private decimal eficienciaGeneral;
    private decimal habilidades;
    private TimeSpan tiempoEntregaPromedio;
    private decimal indiceEficiencia;
    private TimeSpan tiempoEntregaPromedioIdeal = TimeSpan.FromDays(4); // Ejemplo de tiempo de entrega ideal
    private decimal indiceSatisfaccion;
    private decimal tasaRetencion;
    private decimal crecimientoPorcentualIngresos;
    private decimal costoOperacionPorcentaje;
    protected override async Task OnInitializedAsync()
    {
        ventas = await VentasService.GetAllVentasAsync();
        eficienciaGeneral = await VentasService.GetEficienciaGeneralAsync();
        habilidades = (eficienciaGeneral * (decimal)3.7) / 2;
        tiempoEntregaPromedio = await VentasService.GetTiempoEntregaPromedioAsync();
        indiceEficiencia = await VentasService.GetIndiceEficienciaAsync(tiempoEntregaPromedioIdeal);
        indiceSatisfaccion = await VentasService.GetIndiceSatisfaccionAsync();
        tasaRetencion = await VentasService.GetTasaRetencionAsync();
        crecimientoPorcentualIngresos = await VentasService.GetCrecimientoPorcentualIngresosAsync();
        costoOperacionPorcentaje = await VentasService.GetCostoOperacionPorcentajeAsync();

    }
   

}
<PageTitle>Cuadro de Mando Integral</PageTitle>
@if (ventas.Count < 1)
{
    <p><em>Cargando los datos</em></p>
}
else
{
    <table class="table text-center">
        <thead>
            <tr>
                <th>PERSPECTIVA</th>
                <th>OBJETIVO ESTRATÉGICO</th>
                <th>INDICADOR KPI</th>
                <th colspan="3" scope="colgroup">SEMÁFORO</th>
                <th>Resultado Actual</th>
                <th>INDUCTOR</th>
                <th>INICIATIVA ESTRATÉGICA</th>
                <th>RESPONSABLES</th>
            </tr>
            <tr>
                <th></th>
                <th></th>
                <th></th>
                <th>Peligro</th>
                <th>Precaución</th>
                <th>Meta</th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td rowspan="3">APRENDIZAJE Y DESARROLLO</td>
            </tr>
            <tr>
                <td>Eficiencia general de los empleados</td>
                <td>Porcentaje de promedio de ventas por tensacción</td>
                <td class="text-danger">30%</td>
                <td class="text-warning">40%</td>
                <td class="text-success">50%</td>
                @if (Math.Round(eficienciaGeneral) <40)
                {   
                    <td class="text-danger">@Math.Round(eficienciaGeneral)%</td>
                }else if(Math.Round(eficienciaGeneral) < 50){
                    <td class="text-warning">@Math.Round(eficienciaGeneral)%</td>
                }
                else if (Math.Round(eficienciaGeneral) >= 50)
                {
                    <td class="text-success">@Math.Round(eficienciaGeneral)%</td>
                }
                
                
                <td>Organizar reuniones regulares para compartir conocimientos y alinear estrategias</td>
                <td>Programa de Reuniones Corporativas</td>
                <td>Equipo Directivo</td>
            </tr>
            <tr>
                <td>Desarrollar habilidades del personal</td>
                <td>Porcentaje de empleados con habilidades actualizadas</td>
                <td class="text-danger">60%</td>
                <td class="text-warning">70%</td>
                <td class="text-success">80%</td>
                @if (Math.Round(habilidades) <= 70)
                {
                    <td class="text-danger">@Math.Round(habilidades)%</td>
                }
                else if (Math.Round(habilidades) < 80)
                {
                    <td class="text-warning">@Math.Round(habilidades)%</td>
                }
                else
                {
                    <td class="text-success">@Math.Round(habilidades)%</td>
                }
                <td>Identificar las habilidades clave requeridas y proporcionar formación y desarrollo</td>
                <td>Plan estratégico</td>
                <td>Gerente de Recursos Humanos, jefes de Departamento</td>
            </tr>
            <tr>
                <td rowspan="2">PROCESOS INTERNOS</td>
                <td>Reducir el tiempo de entrega del producto a vendedores autorizados</td>
                <td>Tiempo de entrega</td>           
                <td class="text-danger">6 días</td>
                <td class="text-warning">5 días</td>
                <td class="text-success">4 días</td>
                @if (tiempoEntregaPromedio.Days > 5)
                {
                    <td class="text-danger">@tiempoEntregaPromedio.Days días</td>
                }
                else if (tiempoEntregaPromedio.Days>4)
                {
                    <td class="text-warning">@tiempoEntregaPromedio.Days días</td>
                }
                else
                {
                    <td class="text-success">@tiempoEntregaPromedio.Days días</td>
                }
                
                <td>Identificar y eliminar cuellos de botella en los procesos de entrega</td>
                <td>Plan de mejora</td>
                <td>Gerente de Operaciones, Equipo de Procesos</td>
            </tr>
            <tr>
                <td>Mejorar eficiencia operativa</td>
                <td>Índice de eficiencia</td>
                <td class="text-danger">35%</td>
                <td class="text-warning">45%</td>
                <td class="text-success">50%</td>
                
                @if (Math.Round(indiceEficiencia)<=45)
                {
                    <td class="text-danger">@Math.Round(indiceEficiencia)%</td>
                }
                else if (Math.Round(indiceEficiencia)<=50)
                {
                    <td class="text-warning">@Math.Round(indiceEficiencia)%</td>
                }
                else
                {
                    <td class="text-success">@Math.Round(indiceEficiencia)%</td>
                }
                <td>Implementar metodologías Lean y revisar los procesos internos</td>
                <td>Plan de eficiencia operativa</td>
                <td>Gerente de Operaciones</td>
            </tr>
            <tr>
                <td rowspan="2">CLIENTES</td>
                <td>Aumentar índice de satisfacción del cliente</td>
                <td>Índice de satisfacción del cliente</td>
                <td class="text-danger">10%</td>
                <td class="text-warning">20%</td>
                <td class="text-success">40%</td>
                @if (Math.Round(indiceSatisfaccion) <= 20)
                {
                    <td class="text-danger">@indiceSatisfaccion.ToString("F0")%</td>
                }
                else if (Math.Round(indiceSatisfaccion) <= 40)
                {
                    <td class="text-warning">@indiceSatisfaccion.ToString("F0")%</td>
                }
                else
                {
                    <td class="text-success">@indiceSatisfaccion.ToString("F0")%</td>
                }
                
                <td>Implementar programas de mejora de la experiencia del cliente</td>
                <td>Plan de mejora de satisfacción del cliente</td>
                <td>Equipo de Atención al Cliente</td>
            </tr>
            <tr>
                <td>Aumentar la tasa de retención del cliente</td>
                <td>Tasa de retención del cliente</td>
                <td class="text-danger">15%</td>
                <td class="text-warning">25%</td>
                <td class="text-success">35%</td>

                @if (Math.Round(tasaRetencion) <= 25)
                {
                    <td class="text-danger">@tasaRetencion.ToString("F0")%</td>
                }
                else if (Math.Round(tasaRetencion) <= 35)
                {
                    <td class="text-warning">@tasaRetencion.ToString("F0")%</td>
                }
                else
                {
                    <td class="text-success">@tasaRetencion.ToString("F0")%</td>
                }
                <td>Ofrecer programas de fidelización y mejorar la calidad del servicio</td>
                <td>Plan de Cambio</td>
                <td>Gerente de Retención de Clientes, Equipo de Atención al Cliente</td>
            </tr>
            <tr>
                <td rowspan="3">FINANCIERA</td>
            </tr>
            <tr>
                <td>Incrementar ingresos anuales</td>
                <td>Crecimiento porcentual de los ingresos</td>
                <td class="text-danger">55%</td>
                <td class="text-warning">65%</td>
                <td class="text-success">70%</td>
                @if (Math.Round(crecimientoPorcentualIngresos) <= 65)
                {
                    <td class="text-danger">@crecimientoPorcentualIngresos.ToString("F0")%</td>
                }
                else if (Math.Round(crecimientoPorcentualIngresos) <= 70)
                {
                    <td class="text-warning">@crecimientoPorcentualIngresos.ToString("F0")%</td>
                }
                else
                {
                    <td class="text-success">@crecimientoPorcentualIngresos.ToString("F0")%</td>
                }
                <td>Mejorar las estrategias de ventas y marketing, y ampliar la base de clientes</td>
                <td>Plan de mejora de ingresos anuales</td>
                <td>Gerente de Ventas, Gerente de Marketing</td>
            </tr>
            <tr>
                <td>Reducir costos operativos</td>
                <td>Costo de operación como % de los ingresos</td>
                <td class="text-danger">20%</td>
                <td class="text-warning">30%</td>
                <td class="text-success">40%</td>
                @if (Math.Round(costoOperacionPorcentaje) <= 30)
                {
                    <td class="text-danger">@costoOperacionPorcentaje.ToString("F0")%</td>
                }
                else if (Math.Round(costoOperacionPorcentaje) <= 40)
                {
                    <td class="text-warning">@costoOperacionPorcentaje.ToString("F0")%</td>
                }
                else
                {
                    <td class="text-success">@costoOperacionPorcentaje.ToString("F0")%</td>
                }
                <td>Identificar áreas de gastos innecesarios y mejorar la eficiencia operativa</td>
                <td>Plan de mejora de costos operativos</td>
                <td>Director Financiero, Gerente de Operaciones</td>
            </tr>
        </tbody>
    </table>
   
            @* @foreach (var item in ventas)
            {
                <tr>
                    <td>@item.DistribuidorNavigation.Nombre</td>
                    <td>@item.DistribuidorNavigation.Ciudad</td>
                    <td>@item.EmpleadoNavigation.Nombres @item.EmpleadoNavigation.Apellidos</td>
                    <td>@item.ProductoNavigation.Nombre</td>
                    <td>@item.ProductoNavigation.PrecioUnit</td>
                    <td>@item.Cantidad</td>
                    <td>@item.SubTotal</td>
                    <td>@item.VentaNavigation.TotalVenta</td>
                    <td>@item.TiempoNavigation.Fecha</td>
                </tr>                
            } *@
}

